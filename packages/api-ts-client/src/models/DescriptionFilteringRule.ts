/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a rule for filtering items based on text description criteria.
 * 
 * This model defines rules that evaluate text descriptions against specific criteria
 * using confidence thresholds to determine relevance.
 * @export
 * @interface DescriptionFilteringRule
 */
export interface DescriptionFilteringRule {
    /**
     * 
     * @type {string}
     * @memberof DescriptionFilteringRule
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof DescriptionFilteringRule
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof DescriptionFilteringRule
     */
    updatedAt: number;
    /**
     * 
     * @type {string}
     * @memberof DescriptionFilteringRule
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof DescriptionFilteringRule
     */
    minConfidence: number;
    /**
     * 
     * @type {boolean}
     * @memberof DescriptionFilteringRule
     */
    mandatory?: boolean;
}

/**
 * Check if a given object implements the DescriptionFilteringRule interface.
 */
export function instanceOfDescriptionFilteringRule(value: object): value is DescriptionFilteringRule {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('minConfidence' in value) || value['minConfidence'] === undefined) return false;
    return true;
}

export function DescriptionFilteringRuleFromJSON(json: any): DescriptionFilteringRule {
    return DescriptionFilteringRuleFromJSONTyped(json, false);
}

export function DescriptionFilteringRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): DescriptionFilteringRule {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
        'description': json['description'],
        'minConfidence': json['min_confidence'],
        'mandatory': json['mandatory'] == null ? undefined : json['mandatory'],
    };
}

export function DescriptionFilteringRuleToJSON(json: any): DescriptionFilteringRule {
    return DescriptionFilteringRuleToJSONTyped(json, false);
}

export function DescriptionFilteringRuleToJSONTyped(value?: DescriptionFilteringRule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
        'description': value['description'],
        'min_confidence': value['minConfidence'],
        'mandatory': value['mandatory'],
    };
}

