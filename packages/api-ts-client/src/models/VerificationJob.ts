/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssessmentStatus } from './AssessmentStatus';
import {
    AssessmentStatusFromJSON,
    AssessmentStatusFromJSONTyped,
    AssessmentStatusToJSON,
    AssessmentStatusToJSONTyped,
} from './AssessmentStatus';
import type { CollectionFileInstance } from './CollectionFileInstance';
import {
    CollectionFileInstanceFromJSON,
    CollectionFileInstanceFromJSONTyped,
    CollectionFileInstanceToJSON,
    CollectionFileInstanceToJSONTyped,
} from './CollectionFileInstance';
import type { ItemInstance } from './ItemInstance';
import {
    ItemInstanceFromJSON,
    ItemInstanceFromJSONTyped,
    ItemInstanceToJSON,
    ItemInstanceToJSONTyped,
} from './ItemInstance';

/**
 * Represents a verification job that processes a collection against multiple items.
 * 
 * This model orchestrates the verification process, tracking overall status,
 * aggregated results, and associated costs while processing items and files.
 * @export
 * @interface VerificationJob
 */
export interface VerificationJob {
    /**
     * 
     * @type {string}
     * @memberof VerificationJob
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof VerificationJob
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof VerificationJob
     */
    updatedAt: number;
    /**
     * 
     * @type {string}
     * @memberof VerificationJob
     */
    collectionId: string;
    /**
     * 
     * @type {AssessmentStatus}
     * @memberof VerificationJob
     */
    status?: AssessmentStatus;
    /**
     * 
     * @type {number}
     * @memberof VerificationJob
     */
    confidence?: number | null;
    /**
     * 
     * @type {string}
     * @memberof VerificationJob
     */
    aggregatedResults?: string | null;
    /**
     * 
     * @type {Array<ItemInstance>}
     * @memberof VerificationJob
     */
    items?: Array<ItemInstance>;
    /**
     * 
     * @type {Array<CollectionFileInstance>}
     * @memberof VerificationJob
     */
    files?: Array<CollectionFileInstance>;
    /**
     * 
     * @type {string}
     * @memberof VerificationJob
     */
    errorMessage?: string | null;
    /**
     * 
     * @type {number}
     * @memberof VerificationJob
     */
    cost?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof VerificationJob
     */
    searchInternet?: boolean | null;
}



/**
 * Check if a given object implements the VerificationJob interface.
 */
export function instanceOfVerificationJob(value: object): value is VerificationJob {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('collectionId' in value) || value['collectionId'] === undefined) return false;
    return true;
}

export function VerificationJobFromJSON(json: any): VerificationJob {
    return VerificationJobFromJSONTyped(json, false);
}

export function VerificationJobFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerificationJob {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
        'collectionId': json['collection_id'],
        'status': json['status'] == null ? undefined : AssessmentStatusFromJSON(json['status']),
        'confidence': json['confidence'] == null ? undefined : json['confidence'],
        'aggregatedResults': json['aggregated_results'] == null ? undefined : json['aggregated_results'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(ItemInstanceFromJSON)),
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(CollectionFileInstanceFromJSON)),
        'errorMessage': json['error_message'] == null ? undefined : json['error_message'],
        'cost': json['cost'] == null ? undefined : json['cost'],
        'searchInternet': json['search_internet'] == null ? undefined : json['search_internet'],
    };
}

export function VerificationJobToJSON(json: any): VerificationJob {
    return VerificationJobToJSONTyped(json, false);
}

export function VerificationJobToJSONTyped(value?: VerificationJob | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
        'collection_id': value['collectionId'],
        'status': AssessmentStatusToJSON(value['status']),
        'confidence': value['confidence'],
        'aggregated_results': value['aggregatedResults'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(ItemInstanceToJSON)),
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(CollectionFileInstanceToJSON)),
        'error_message': value['errorMessage'],
        'cost': value['cost'],
        'search_internet': value['searchInternet'],
    };
}

