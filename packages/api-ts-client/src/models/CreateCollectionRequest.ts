/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CollectionFile } from './CollectionFile';
import {
    CollectionFileFromJSON,
    CollectionFileFromJSONTyped,
    CollectionFileToJSON,
    CollectionFileToJSONTyped,
} from './CollectionFile';
import type { AssessmentStatus } from './AssessmentStatus';
import {
    AssessmentStatusFromJSON,
    AssessmentStatusFromJSONTyped,
    AssessmentStatusToJSON,
    AssessmentStatusToJSONTyped,
} from './AssessmentStatus';

/**
 * Request model for creating a new collection.
 * 
 * Contains the initial configuration for a collection including optional
 * description, files, assessment status, address, and associated item IDs.
 * @export
 * @interface CreateCollectionRequest
 */
export interface CreateCollectionRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateCollectionRequest
     */
    description?: string | null;
    /**
     * 
     * @type {Array<CollectionFile>}
     * @memberof CreateCollectionRequest
     */
    files?: Array<CollectionFile>;
    /**
     * 
     * @type {AssessmentStatus}
     * @memberof CreateCollectionRequest
     */
    status?: AssessmentStatus;
    /**
     * 
     * @type {string}
     * @memberof CreateCollectionRequest
     */
    address?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateCollectionRequest
     */
    itemIds?: Array<string>;
}



/**
 * Check if a given object implements the CreateCollectionRequest interface.
 */
export function instanceOfCreateCollectionRequest(value: object): value is CreateCollectionRequest {
    return true;
}

export function CreateCollectionRequestFromJSON(json: any): CreateCollectionRequest {
    return CreateCollectionRequestFromJSONTyped(json, false);
}

export function CreateCollectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCollectionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(CollectionFileFromJSON)),
        'status': json['status'] == null ? undefined : AssessmentStatusFromJSON(json['status']),
        'address': json['address'] == null ? undefined : json['address'],
        'itemIds': json['item_ids'] == null ? undefined : json['item_ids'],
    };
}

export function CreateCollectionRequestToJSON(json: any): CreateCollectionRequest {
    return CreateCollectionRequestToJSONTyped(json, false);
}

export function CreateCollectionRequestToJSONTyped(value?: CreateCollectionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(CollectionFileToJSON)),
        'status': AssessmentStatusToJSON(value['status']),
        'address': value['address'],
        'item_ids': value['itemIds'],
    };
}

