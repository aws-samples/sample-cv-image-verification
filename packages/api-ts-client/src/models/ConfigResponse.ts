/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConfigResponse
 */
export interface ConfigResponse {
    /**
     * 
     * @type {string}
     * @memberof ConfigResponse
     */
    configType: string;
    /**
     * 
     * @type {number}
     * @memberof ConfigResponse
     */
    timestamp: number;
    /**
     * 
     * @type {string}
     * @memberof ConfigResponse
     */
    value: string;
    /**
     * 
     * @type {string}
     * @memberof ConfigResponse
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof ConfigResponse
     */
    isActive: string;
    /**
     * 
     * @type {string}
     * @memberof ConfigResponse
     */
    description?: string | null;
}

/**
 * Check if a given object implements the ConfigResponse interface.
 */
export function instanceOfConfigResponse(value: object): value is ConfigResponse {
    if (!('configType' in value) || value['configType'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    return true;
}

export function ConfigResponseFromJSON(json: any): ConfigResponse {
    return ConfigResponseFromJSONTyped(json, false);
}

export function ConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'configType': json['config_type'],
        'timestamp': json['timestamp'],
        'value': json['value'],
        'createdAt': json['created_at'],
        'isActive': json['is_active'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function ConfigResponseToJSON(json: any): ConfigResponse {
    return ConfigResponseToJSONTyped(json, false);
}

export function ConfigResponseToJSONTyped(value?: ConfigResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'config_type': value['configType'],
        'timestamp': value['timestamp'],
        'value': value['value'],
        'created_at': value['createdAt'],
        'is_active': value['isActive'],
        'description': value['description'],
    };
}

