/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a rule for filtering items based on image label detection criteria.
 * 
 * This model defines rules that evaluate images based on detected labels,
 * confidence scores, and minimum size requirements for the detected objects.
 * @export
 * @interface LabelFilteringRule
 */
export interface LabelFilteringRule {
    /**
     * Unique identifier for the label filtering rule
     * @type {string}
     * @memberof LabelFilteringRule
     */
    id: string;
    /**
     * Timestamp when the rule was created
     * @type {number}
     * @memberof LabelFilteringRule
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof LabelFilteringRule
     */
    updatedAt: number;
    /**
     * 
     * @type {Array<string | null>}
     * @memberof LabelFilteringRule
     */
    imageLabels?: Array<string | null>;
    /**
     * 
     * @type {number}
     * @memberof LabelFilteringRule
     */
    minConfidence: number;
    /**
     * Minimum size percentage of the image that must be occupied by the detected object
     * @type {number}
     * @memberof LabelFilteringRule
     */
    minImageSizePercent?: number;
}

/**
 * Check if a given object implements the LabelFilteringRule interface.
 */
export function instanceOfLabelFilteringRule(value: object): value is LabelFilteringRule {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('minConfidence' in value) || value['minConfidence'] === undefined) return false;
    return true;
}

export function LabelFilteringRuleFromJSON(json: any): LabelFilteringRule {
    return LabelFilteringRuleFromJSONTyped(json, false);
}

export function LabelFilteringRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): LabelFilteringRule {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
        'imageLabels': json['image_labels'] == null ? undefined : json['image_labels'],
        'minConfidence': json['min_confidence'],
        'minImageSizePercent': json['min_image_size_percent'] == null ? undefined : json['min_image_size_percent'],
    };
}

export function LabelFilteringRuleToJSON(json: any): LabelFilteringRule {
    return LabelFilteringRuleToJSONTyped(json, false);
}

export function LabelFilteringRuleToJSONTyped(value?: LabelFilteringRule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
        'image_labels': value['imageLabels'],
        'min_confidence': value['minConfidence'],
        'min_image_size_percent': value['minImageSizePercent'],
    };
}

