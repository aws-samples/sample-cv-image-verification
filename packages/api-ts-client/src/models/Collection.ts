/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Item } from './Item';
import {
    ItemFromJSON,
    ItemFromJSONTyped,
    ItemToJSON,
    ItemToJSONTyped,
} from './Item';
import type { CollectionFile } from './CollectionFile';
import {
    CollectionFileFromJSON,
    CollectionFileFromJSONTyped,
    CollectionFileToJSON,
    CollectionFileToJSONTyped,
} from './CollectionFile';

/**
 * Represents a collection of files to be verified against items.
 * 
 * Collections serve as the primary container for files that need assessment,
 * including optional address information and associated items for verification.
 * @export
 * @interface Collection
 */
export interface Collection {
    /**
     * 
     * @type {string}
     * @memberof Collection
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof Collection
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof Collection
     */
    updatedAt: number;
    /**
     * 
     * @type {string}
     * @memberof Collection
     */
    description?: string | null;
    /**
     * 
     * @type {Array<CollectionFile>}
     * @memberof Collection
     */
    files?: Array<CollectionFile>;
    /**
     * 
     * @type {string}
     * @memberof Collection
     */
    address?: string | null;
    /**
     * 
     * @type {Array<Item>}
     * @memberof Collection
     */
    items?: Array<Item>;
}

/**
 * Check if a given object implements the Collection interface.
 */
export function instanceOfCollection(value: object): value is Collection {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function CollectionFromJSON(json: any): Collection {
    return CollectionFromJSONTyped(json, false);
}

export function CollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Collection {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
        'description': json['description'] == null ? undefined : json['description'],
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(CollectionFileFromJSON)),
        'address': json['address'] == null ? undefined : json['address'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(ItemFromJSON)),
    };
}

export function CollectionToJSON(json: any): Collection {
    return CollectionToJSONTyped(json, false);
}

export function CollectionToJSONTyped(value?: Collection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
        'description': value['description'],
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(CollectionFileToJSON)),
        'address': value['address'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(ItemToJSON)),
    };
}

