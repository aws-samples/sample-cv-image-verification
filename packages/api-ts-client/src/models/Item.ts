/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LabelFilteringRule } from './LabelFilteringRule';
import {
    LabelFilteringRuleFromJSON,
    LabelFilteringRuleFromJSONTyped,
    LabelFilteringRuleToJSON,
    LabelFilteringRuleToJSONTyped,
} from './LabelFilteringRule';
import type { DescriptionFilteringRule } from './DescriptionFilteringRule';
import {
    DescriptionFilteringRuleFromJSON,
    DescriptionFilteringRuleFromJSONTyped,
    DescriptionFilteringRuleToJSON,
    DescriptionFilteringRuleToJSONTyped,
} from './DescriptionFilteringRule';

/**
 * Represents a core item entity that can be verified against collections.
 * 
 * Items define the criteria and rules used to assess whether files in a collection
 * meet specific requirements. They contain both label-based and description-based
 * filtering rules for comprehensive evaluation.
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    updatedAt: number;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    description: string;
    /**
     * 
     * @type {Array<LabelFilteringRule>}
     * @memberof Item
     */
    labelFilteringRules?: Array<LabelFilteringRule>;
    /**
     * 
     * @type {Array<DescriptionFilteringRule>}
     * @memberof Item
     */
    descriptionFilteringRules?: Array<DescriptionFilteringRule>;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    clusterNumber?: number | null;
    /**
     * List of agent IDs that should be used for this item. Agents will process the item against the collection files and return results based on their specific logic.
     * @type {Array<string>}
     * @memberof Item
     */
    agentIds?: Array<string>;
}

/**
 * Check if a given object implements the Item interface.
 */
export function instanceOfItem(value: object): value is Item {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function ItemFromJSON(json: any): Item {
    return ItemFromJSONTyped(json, false);
}

export function ItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): Item {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
        'name': json['name'],
        'description': json['description'],
        'labelFilteringRules': json['label_filtering_rules'] == null ? undefined : ((json['label_filtering_rules'] as Array<any>).map(LabelFilteringRuleFromJSON)),
        'descriptionFilteringRules': json['description_filtering_rules'] == null ? undefined : ((json['description_filtering_rules'] as Array<any>).map(DescriptionFilteringRuleFromJSON)),
        'clusterNumber': json['cluster_number'] == null ? undefined : json['cluster_number'],
        'agentIds': json['agent_ids'] == null ? undefined : json['agent_ids'],
    };
}

export function ItemToJSON(json: any): Item {
    return ItemToJSONTyped(json, false);
}

export function ItemToJSONTyped(value?: Item | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
        'name': value['name'],
        'description': value['description'],
        'label_filtering_rules': value['labelFilteringRules'] == null ? undefined : ((value['labelFilteringRules'] as Array<any>).map(LabelFilteringRuleToJSON)),
        'description_filtering_rules': value['descriptionFilteringRules'] == null ? undefined : ((value['descriptionFilteringRules'] as Array<any>).map(DescriptionFilteringRuleToJSON)),
        'cluster_number': value['clusterNumber'],
        'agent_ids': value['agentIds'],
    };
}

