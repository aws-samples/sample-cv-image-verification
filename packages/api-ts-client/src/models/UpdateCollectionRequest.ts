/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CollectionFile } from './CollectionFile';
import {
    CollectionFileFromJSON,
    CollectionFileFromJSONTyped,
    CollectionFileToJSON,
    CollectionFileToJSONTyped,
} from './CollectionFile';
import type { AssessmentStatus } from './AssessmentStatus';
import {
    AssessmentStatusFromJSON,
    AssessmentStatusFromJSONTyped,
    AssessmentStatusToJSON,
    AssessmentStatusToJSONTyped,
} from './AssessmentStatus';

/**
 * Request model for updating an existing collection.
 * 
 * All fields are optional, allowing partial updates to collection properties
 * including description, files, status, and address information.
 * @export
 * @interface UpdateCollectionRequest
 */
export interface UpdateCollectionRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateCollectionRequest
     */
    description?: string | null;
    /**
     * 
     * @type {Array<CollectionFile>}
     * @memberof UpdateCollectionRequest
     */
    files?: Array<CollectionFile> | null;
    /**
     * 
     * @type {AssessmentStatus}
     * @memberof UpdateCollectionRequest
     */
    status?: AssessmentStatus | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateCollectionRequest
     */
    address?: string | null;
}



/**
 * Check if a given object implements the UpdateCollectionRequest interface.
 */
export function instanceOfUpdateCollectionRequest(value: object): value is UpdateCollectionRequest {
    return true;
}

export function UpdateCollectionRequestFromJSON(json: any): UpdateCollectionRequest {
    return UpdateCollectionRequestFromJSONTyped(json, false);
}

export function UpdateCollectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCollectionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(CollectionFileFromJSON)),
        'status': json['status'] == null ? undefined : AssessmentStatusFromJSON(json['status']),
        'address': json['address'] == null ? undefined : json['address'],
    };
}

export function UpdateCollectionRequestToJSON(json: any): UpdateCollectionRequest {
    return UpdateCollectionRequestToJSONTyped(json, false);
}

export function UpdateCollectionRequestToJSONTyped(value?: UpdateCollectionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(CollectionFileToJSON)),
        'status': AssessmentStatusToJSON(value['status']),
        'address': value['address'],
    };
}

