/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Collection } from './Collection';
import {
    CollectionFromJSON,
    CollectionFromJSONTyped,
    CollectionToJSON,
    CollectionToJSONTyped,
} from './Collection';

/**
 * Response model for listing collections.
 * 
 * Returns a paginated list of Collection objects available to the user,
 * including their metadata and associated files.
 * @export
 * @interface CollectionsListResponse
 */
export interface CollectionsListResponse {
    /**
     * 
     * @type {Array<Collection>}
     * @memberof CollectionsListResponse
     */
    items: Array<Collection>;
}

/**
 * Check if a given object implements the CollectionsListResponse interface.
 */
export function instanceOfCollectionsListResponse(value: object): value is CollectionsListResponse {
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function CollectionsListResponseFromJSON(json: any): CollectionsListResponse {
    return CollectionsListResponseFromJSONTyped(json, false);
}

export function CollectionsListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectionsListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(CollectionFromJSON)),
    };
}

export function CollectionsListResponseToJSON(json: any): CollectionsListResponse {
    return CollectionsListResponseToJSONTyped(json, false);
}

export function CollectionsListResponseToJSONTyped(value?: CollectionsListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(CollectionToJSON)),
    };
}

