/* tslint:disable */
/* eslint-disable */
/**
 * Computer Vision Image Verification API
 * FastAPI backend for the Computer Vision Image Verification sample.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssessmentStatus } from './AssessmentStatus';
import {
    AssessmentStatusFromJSON,
    AssessmentStatusFromJSONTyped,
    AssessmentStatusToJSON,
    AssessmentStatusToJSONTyped,
} from './AssessmentStatus';

/**
 * Request model for adding a file to a collection.
 * @export
 * @interface AddFileRequest
 */
export interface AddFileRequest {
    /**
     * 
     * @type {string}
     * @memberof AddFileRequest
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof AddFileRequest
     */
    createdAt: number;
    /**
     * 
     * @type {string}
     * @memberof AddFileRequest
     */
    s3Key: string;
    /**
     * 
     * @type {string}
     * @memberof AddFileRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AddFileRequest
     */
    contentType: string;
    /**
     * 
     * @type {string}
     * @memberof AddFileRequest
     */
    filename: string;
    /**
     * 
     * @type {AssessmentStatus}
     * @memberof AddFileRequest
     */
    status?: AssessmentStatus | null;
    /**
     * 
     * @type {string}
     * @memberof AddFileRequest
     */
    statusReasoning?: string | null;
}



/**
 * Check if a given object implements the AddFileRequest interface.
 */
export function instanceOfAddFileRequest(value: object): value is AddFileRequest {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('s3Key' in value) || value['s3Key'] === undefined) return false;
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    if (!('filename' in value) || value['filename'] === undefined) return false;
    return true;
}

export function AddFileRequestFromJSON(json: any): AddFileRequest {
    return AddFileRequestFromJSONTyped(json, false);
}

export function AddFileRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddFileRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['created_at'],
        's3Key': json['s3_key'],
        'description': json['description'] == null ? undefined : json['description'],
        'contentType': json['content_type'],
        'filename': json['filename'],
        'status': json['status'] == null ? undefined : AssessmentStatusFromJSON(json['status']),
        'statusReasoning': json['status_reasoning'] == null ? undefined : json['status_reasoning'],
    };
}

export function AddFileRequestToJSON(json: any): AddFileRequest {
    return AddFileRequestToJSONTyped(json, false);
}

export function AddFileRequestToJSONTyped(value?: AddFileRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': value['createdAt'],
        's3_key': value['s3Key'],
        'description': value['description'],
        'content_type': value['contentType'],
        'filename': value['filename'],
        'status': AssessmentStatusToJSON(value['status']),
        'status_reasoning': value['statusReasoning'],
    };
}

